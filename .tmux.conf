unbind C-b
set -g prefix C-g
set -g status-interval 1
set -g focus-events on
set -s escape-time 0
set -g history-limit 40000
set -g status-bg black
set -g status-fg yellow
set -g status-justify left
set -g status-left-length 200
set -g status-right-length 300
set -g pane-border-fg colour245
set -g window-status-activity-attr bright
setw -g window-status-attr dim
set -g pane-active-border-fg colour39
set -g message-fg colour168
set -g message-bg colour237
set -g message-attr bright

set -g visual-activity on
#set -g visual-silence on
#set -g monitor-bell on
#set -g silence-action other
#set -g activity-action other
#set -g monitor-silence 1
setw -g monitor-activity on

setw -g -q utf8 on
setw -g allow-rename off
setw -g automatic-rename on
set -g renumber-windows on
set -g base-index 1             # start windows numbering at 1
set -g pane-base-index 1       # make pane numbering consistent with windows
set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time

set -g status-left '#[fg=white,bg=cyan] #[fg=white,bg=cyan,bold]#S '
set -g status-right '#[fg=cyan]#[fg=white,bg=cyan,bold] %Y-%m-%d #[fg=red]#[fg=black,bg=red,bold]#[fg=white,bg=yellow]#(whoami)@#h'
set-window-option -g window-status-format '  #[dim]#I:#[default]#W#[fg=cyan,dim]#F#[bg=colour215]'
set-window-option -g window-status-current-format ' #[fg=white,bg=red,bold]#I:#[fg=white,bg=cyan,bold]#W#[fg=colour37,bg=black]'

if-shell '[ $(uname -s) = Darwin ]' 'set -g default-terminal "xterm-256color"; \
set -g default-command "reattach-to-user-namespace -l ${SHELL}"'
set -ga terminal-overrides ",xterm-256color:Tc"               # enable truecolors support
# set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'       # for neovim useful but vim

bind M \
    set -g mouse on          \;\
    # set -g mouse-resize-pane on   \;\ {{{
    # set -g mouse-select-pane on   \;\
    # set -g mouse-select-window on \;\
    # display 'Mouse: On'
    # }}}

setw -g mode-keys vi
set -g @shell_mode 'vi'

bind-key c copy-mode
bind-key u list-buffers
bind-key b choose-buffer
bind-key e delete-buffer
bind-key p paste-buffer
bind-key P pipe-pane -o "cat >>~/Desktop/#S_#W.log" \; display "Toggled logging to ~/Desktop/#S_#W.log"
bind-key r rotate-window
bind-key t next-layout
bind-key m command-prompt "splitw -h 'exec man %%'"
bind-key n new-window
bind-key i previous-window
bind-key space next-window
bind-key x kill-pane
bind-key o last-window        # move to last active window
bind-key v resize-pane -Z
bind-key - split-window
bind-key 0 split-window -h
bind-key 9 select-layout main-horizontal
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi > send-keys -X end-of-line
bind-key -T copy-mode-vi y \
    send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \;\
    send-keys -X clear-selection

bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

bind -r C-h select-pane -L \; resize-pane -Z
bind -r C-j select-pane -D \; resize-pane -Z
bind -r C-k select-pane -U \; resize-pane -Z
bind -r C-l select-pane -R \; resize-pane -Z

# bind -r C-h resize-pane -L
# bind -r C-j resize-pane -D
# bind -r C-k resize-pane -U
# bind -r C-l resize-pane -R

# tmux plugin manager tpm and plugins lists: {{{
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    set -g @plugin 'tmux-plugins/tmux-resurrect'
    set -g @plugin 'tmux-plugins/tmux-continuum'
    run '~/.tmux/plugins/tpm/tpm'
# }}}

set -g @resurrect-processes 'vim ssh musicbox'
set -g @resurrect-processes '"ssh -p 22890 root@vulvps.cc"'
set -g @resurrect-processes '"ssh -p 27797 root@bwgvps.cc"'
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-save-shell-history 'on'
set -g @resurrect-strategy-vim 'session'

set -g @continuum-restore 'on' # 启用自动恢复
set -g @continuum-save-interval '30'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
set -g @continuum-boot-options 'iterm,fullscreen'

bind R source-file ~/.tmux.conf
# tmuxinator fast create session:
# tmuxinator new project_a
# mux start project_a

# reference: http://louiszhai.github.io/2017/09/30/tmux
